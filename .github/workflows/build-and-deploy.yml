name: Build LaTeX Projects and Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # -----------------------------------------------------------------
      # STEP 1: SETUP TEX LIVE WITH RELIABLE CACHING
      # -----------------------------------------------------------------
      - name: Cache TeX Live installation
        id: cache-texlive
        uses: actions/cache@v4
        with:
          path: /tmp/texlive-cache
          key: ${{ runner.os }}-texlive-full-2024-06-21
          restore-keys: |
            ${{ runner.os }}-texlive-full-

      - name: Install TeX Live
        run: |
          # Check if cache exists
          if [[ -d "/tmp/texlive-cache" ]]; then
            echo "Restoring TeX Live from cache..."
            sudo rsync -a /tmp/texlive-cache/ /usr/
          else
            echo "Installing TeX Live..."
            sudo apt-get update
            sudo apt-get install -y \
              texlive-full \
              texlive-latex-extra \
              texlive-fonts-extra \
              texlive-luatex \
              texlive-xetex \
              tex4ht
            
            echo "Caching TeX Live installation..."
            mkdir -p /tmp/texlive-cache
            sudo rsync -a /usr/share/texlive/ /tmp/texlive-cache/usr/share/texlive
            sudo rsync -a /etc/texmf/ /tmp/texlive-cache/etc/texmf
            sudo rsync -a /var/lib/texmf/ /tmp/texlive-cache/var/lib/texmf
            sudo rsync -a /usr/bin/ /tmp/texlive-cache/usr/bin
          fi
          
          echo "TeX Live setup complete"

      # -----------------------------------------------------------------
      # STEP 2: CONVERT LATEX PROJECTS
      # -----------------------------------------------------------------
      - name: Convert projects and build index
        run: |
          echo "Starting conversion process..."
          mkdir -p _site/_converted
          PROJECT_CARDS_HTML=""
          
          # Loop through all directories
          for dir in */; do
            # Remove trailing slash
            dir_name=${dir%/}
            
            # Skip special directories
            if [[ "$dir_name" == ".github" || "$dir_name" == "_site" ]]; then
              echo "Skipping directory: $dir_name"
              continue
            fi
            
            # Find main .tex file
            MAIN_TEX=$(find "$dir_name" -maxdepth 1 -type f -name "*.tex" | head -n 1)
            
            if [[ -n "$MAIN_TEX" ]]; then
              PROJECT_NAME=$(basename "$dir_name")
              echo "✅ Converting LaTeX project: $PROJECT_NAME"
              
              # Run make4ht conversion
              make4ht -l -u -c ./build.cfg -d "_site/_converted/${PROJECT_NAME}" "$MAIN_TEX" "mathjax,svg"
              
              # Generate project card HTML
              CARD="<a href=\"./_converted/${PROJECT_NAME}/\" class=\"block p-6 bg-white border border-gray-200 rounded-xl shadow-md hover:shadow-xl hover:scale-105 transition-all duration-300 ease-in-out\">
                <h3 class=\"mb-2 text-2xl font-bold tracking-tight text-gray-800\">${PROJECT_NAME}</h3>
                <p class=\"font-normal text-gray-500\">Click to view the converted HTML document.</p>
              </a>"
              PROJECT_CARDS_HTML="$PROJECT_CARDS_HTML $CARD"
            else
              echo "⚠️ No .tex file found in: $dir_name"
            fi
          done
          
          # Generate final index.html
          sed "s|<!-- PROJECTS_LIST -->|${PROJECT_CARDS_HTML}|g" index.template.html > _site/index.html
          echo "✅ Site built successfully in '_site' directory"

      # -----------------------------------------------------------------
      # STEP 3: DEPLOY TO GITHUB PAGES
      # -----------------------------------------------------------------
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site
